//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CrossFinance.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ApplicationDbContext : DbContext
    {
        public ApplicationDbContext()
            : base("name=ApplicationDbContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<address> address { get; set; }
        public virtual DbSet<agreement> agreement { get; set; }
        public virtual DbSet<financialstate> financialstate { get; set; }
        public virtual DbSet<person> person { get; set; }
    
        public virtual int sp_InsertPerson(string firstName, string secondName, string surname, string nationalIdentificationNumber, Nullable<int> addressId, string phoneNumber, string phoneNumber2)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var secondNameParameter = secondName != null ?
                new ObjectParameter("SecondName", secondName) :
                new ObjectParameter("SecondName", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var nationalIdentificationNumberParameter = nationalIdentificationNumber != null ?
                new ObjectParameter("NationalIdentificationNumber", nationalIdentificationNumber) :
                new ObjectParameter("NationalIdentificationNumber", typeof(string));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var phoneNumber2Parameter = phoneNumber2 != null ?
                new ObjectParameter("PhoneNumber2", phoneNumber2) :
                new ObjectParameter("PhoneNumber2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertPerson", firstNameParameter, secondNameParameter, surnameParameter, nationalIdentificationNumberParameter, addressIdParameter, phoneNumberParameter, phoneNumber2Parameter);
        }
    }
}
